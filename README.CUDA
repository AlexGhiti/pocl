Support for NVIDIA GPUs via CUDA is currently experimental and many
features may be missing or incomplete.

# Compiling pocl with CUDA support

Add `-DENABLE_CUDA=ON` to the CMake command-line.

Assumes `libcuda.so` is on library search path. (TODO: Get CMake to sort
this out).

Currently only tested with LLVM 3.8, and CUDA 7.0/7.5.

# Running on a CUDA device

Use `POCL_DEVICES=CUDA` to select only CUDA devices.

Requires `CUDA_PATH` environment variable to be set to the root of the
CUDA installation (containing the `nvvm` directory).

The `POCL_CUDA_GPU_ARCH` environment variable can be set to override
the target GPU architecture (e.g. `POCL_CUDA_GPU_ARCH=sm_35`), which
may be necessary in casees where LLVM doesn't yet support the
architecture (currently an issue for `sm_32` and `sm_53`).

The `POCL_NO_PTX_CACHE` environment variable can be set to `1` to
force pocl to always regenerate the PTX module instead of using a
cached version.

# Known issues

- Images and samplers are unimplemented
- Atomics are unimplimented
- Global offsets are unimplemented
- get_work_dim is unimplemented
- FP64 math functions are mostly missing
- printf format support is incomplete
